<?xml version="1.0" encoding="UTF-8"?><testsuites failures="262" name="dependency-check" tests="64"><testsuite failures="0" errors="0" time="0" id="0" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\HdrHistogram-2.1.10.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: HdrHistogram-2.1.10.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: HdrHistogram-2.1.10.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="1" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\LatencyUtils-2.0.3.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: LatencyUtils-2.0.3.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: LatencyUtils-2.0.3.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="2" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\accessors-smart-1.2.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: accessors-smart-1.2.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: accessors-smart-1.2.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="3" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\aether-api-0.9.0.M2.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aether-api-0.9.0.M2.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aether-api-0.9.0.M2.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="4" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\aether-impl-0.9.0.M2.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aether-impl-0.9.0.M2.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aether-impl-0.9.0.M2.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="5" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\aether-spi-0.9.0.M2.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aether-spi-0.9.0.M2.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aether-spi-0.9.0.M2.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="6" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\aether-util-0.9.0.M2.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aether-util-0.9.0.M2.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aether-util-0.9.0.M2.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="7" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\android-json-0.0.20131108.vaadin1.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: android-json-0.0.20131108.vaadin1.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: android-json-0.0.20131108.vaadin1.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="8" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\aopalliance-1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aopalliance-1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: aopalliance-1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="9" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\asm-3.3.1.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: asm-3.3.1.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: asm-3.3.1.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="10" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\asm-5.0.4.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: asm-5.0.4.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: asm-5.0.4.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="11" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\assertj-core-3.9.1.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: assertj-core-3.9.1.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: assertj-core-3.9.1.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="12" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\attoparser-2.0.4.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: attoparser-2.0.4.RELEASE.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: attoparser-2.0.4.RELEASE.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="13" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\byte-buddy-1.7.11.jar\META-INF/maven/net.bytebuddy/byte-buddy-dep/pom.xml" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: byte-buddy-1.7.11.jar (shaded: net.bytebuddy:byte-buddy-dep:1.7.11)" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: byte-buddy-1.7.11.jar (shaded: net.bytebuddy:byte-buddy-dep:1.7.11)"/></testsuite><testsuite failures="0" errors="0" time="0" id="14" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\byte-buddy-1.7.11.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: byte-buddy-1.7.11.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: byte-buddy-1.7.11.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="15" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\byte-buddy-agent-1.7.11.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: byte-buddy-agent-1.7.11.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: byte-buddy-agent-1.7.11.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="16" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\cdi-api-1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: cdi-api-1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: cdi-api-1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="17" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\classmate-1.3.4.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: classmate-1.3.4.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: classmate-1.3.4.jar"/></testsuite><testsuite failures="1" errors="0" time="0" id="18" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\commons-io-2.6.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: commons-io-2.6.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2021-29425" name="pkg:maven/commons-io/commons-io@2.6"><failure message="cvssV3: MEDIUM, score: 4.8 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:2.2/RC:R/MAV:A)"/><system-out>In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like &quot;//../foo&quot;, or &quot;\\..\foo&quot;, the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus &quot;limited&quot; path traversal), if the calling code would use the result to construct a path value.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\commons-io-2.6.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="19" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\commons-lang3-3.7.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: commons-lang3-3.7.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: commons-lang3-3.7.jar"/></testsuite><testsuite failures="2" errors="0" time="0" id="20" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\guava-10.0.1.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: guava-10.0.1.jar" skipped="0" tests="2" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-2976" name="pkg:maven/com.google.guava/guava@10.0.1"><failure message="cvssV3: HIGH, score: 7.1 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N/E:1.8/RC:R/MAV:A)"/><system-out>Use of Java&apos;s default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.

Even though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\guava-10.0.1.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-8908" name="pkg:maven/com.google.guava/guava@10.0.1"><failure message="cvssV3: LOW, score: 3.3 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N/E:1.8/RC:R/MAV:A)"/><system-out>A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime&apos;s java.io.tmpdir system property to point to a location whose permissions are appropriately configured.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\guava-10.0.1.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="21" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\hamcrest-core-1.3.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: hamcrest-core-1.3.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: hamcrest-core-1.3.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="22" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\hamcrest-library-1.3.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: hamcrest-library-1.3.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: hamcrest-library-1.3.jar"/></testsuite><testsuite failures="2" errors="0" time="0" id="23" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\hibernate-validator-6.0.10.Final.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: hibernate-validator-6.0.10.Final.jar" skipped="0" tests="2" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2019-10219" name="pkg:maven/org.hibernate.validator/hibernate-validator@6.0.10.Final"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:2.8/RC:R/MAV:A)"/><system-out>A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\hibernate-validator-6.0.10.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-10693" name="pkg:maven/org.hibernate.validator/hibernate-validator@6.0.10.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\hibernate-validator-6.0.10.Final.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="1" errors="0" time="0" id="24" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-annotations-2.9.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jackson-annotations-2.9.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2018-1000873" name="pkg:maven/com.fasterxml.jackson.core/jackson-annotations@2.9.0"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-annotations-2.9.0.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="1" errors="0" time="0" id="25" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-core-2.9.6.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jackson-core-2.9.6.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2018-1000873" name="pkg:maven/com.fasterxml.jackson.core/jackson-core@2.9.6"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-core-2.9.6.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="62" errors="0" time="0" id="26" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jackson-databind-2.9.6.jar" skipped="0" tests="62" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2018-14721" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 10.0 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-14718" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-14719" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-14720" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-19360" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-19361" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-19362" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-14379" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-14540" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-14892" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-14893" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-16335" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-16942" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-16943" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-17267" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-17531" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-20330" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-8840" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-9546" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-9547" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-9548" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-10672" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H/E:2.8/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory (aka aries.transaction.jms).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-10673" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H/E:2.8/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-10968" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H/E:2.8/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.aoju.bus.proxy.provider.remoting.RmiProvider (aka bus-proxy).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-10969" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H/E:2.8/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to javax.swing.JEditorPane.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11111" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H/E:2.8/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.activemq.* (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11112" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H/E:2.8/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.proxy.provider.remoting.RmiProvider (aka apache/commons-proxy).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11113" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H/E:2.8/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.openjpa.ee.WASRegistryManagedRuntime (aka openjpa).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-10650" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>A deserialization flaw was discovered in jackson-databind through 2.9.10.4. It could allow an unauthenticated user to perform code execution via ignite-jta or quartz-core: org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup, org.apache.ignite.cache.jta.jndi.CacheJndiTmFactory, and org.quartz.utils.JNDIConnectionProvider.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11619" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11620" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-14060" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-14061" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-14062" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-14195" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to org.jsecurity.realm.jndi.JndiRealmFactory (aka org.jsecurity).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-24616" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-24750" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-35490" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-35491" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-35728" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36179" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36180" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36181" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36182" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36183" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36184" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36185" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36186" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36187" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36188" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36189" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-20190" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-12086" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-14439" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-25649" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-36518" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-42003" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In FasterXML jackson-databind before versions 2.13.4.1 and 2.12.17.1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-42004" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-1000873" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-12384" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-12814" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-35116" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.6"><failure message="cvssV3: MEDIUM, score: 4.7 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H/E:1.0/RC:R/MAV:A)"/><system-out>jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor&apos;s perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jackson-databind-2.9.6.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="27" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\javax.annotation-api-1.3.2.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: javax.annotation-api-1.3.2.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: javax.annotation-api-1.3.2.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="28" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\javax.inject-1.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: javax.inject-1.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: javax.inject-1.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="29" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jboss-logging-3.3.2.Final.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jboss-logging-3.3.2.Final.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jboss-logging-3.3.2.Final.jar"/></testsuite><testsuite failures="1" errors="0" time="0" id="30" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\json-path-2.4.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: json-path-2.4.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-51074" name="pkg:maven/com.jayway.jsonpath/json-path@2.4.0"><failure message="cvssV3: MEDIUM, score: 5.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>json-path v2.8.0 was discovered to contain a stack overflow via the Criteria.parse() method.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\json-path-2.4.0.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="3" errors="0" time="0" id="31" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\json-smart-2.3.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: json-smart-2.3.jar" skipped="0" tests="3" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2021-31684" name="pkg:maven/net.minidev/json-smart@2.3"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A vulnerability was discovered in the indexOf function of JSONParserByteArray in JSON Smart versions 1.3 and 2.4 which causes a denial of service (DOS) via a crafted web request.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\json-smart-2.3.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-1370" name="pkg:maven/net.minidev/json-smart@2.3"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>[Json-smart](https://netplex.github.io/json-smart/) is a performance focused, JSON processor lib.

When reaching a ��� or ��� character in the JSON input, the code parses an array or an object respectively.

It was discovered that the code does not have any limit to the nesting of such arrays or objects. Since the parsing of nested arrays and objects is done recursively, nesting too many of them can cause a stack exhaustion (stack overflow) and crash the software.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\json-smart-2.3.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-27568" name="pkg:maven/net.minidev/json-smart@2.3"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H/E:2.2/RC:R/MAV:A)"/><system-out>An issue was discovered in netplex json-smart-v1 through 2015-10-23 and json-smart-v2 through 2.4. An exception is thrown from a function, but it is not caught, as demonstrated by NumberFormatException. When it is not caught, it may cause programs using the library to crash or expose sensitive information.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\json-smart-2.3.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="32" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jsonassert-1.5.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jsonassert-1.5.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jsonassert-1.5.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="33" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jsr250-api-1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jsr250-api-1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jsr250-api-1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="34" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jsr305-1.3.9.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jsr305-1.3.9.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jsr305-1.3.9.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="35" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\jul-to-slf4j-1.7.25.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jul-to-slf4j-1.7.25.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: jul-to-slf4j-1.7.25.jar"/></testsuite><testsuite failures="1" errors="0" time="0" id="36" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\junit-4.12.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: junit-4.12.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2020-15250" name="pkg:maven/junit/junit@4.12"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N/E:1.8/RC:R/MAV:A)"/><system-out>In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system&apos;s temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\junit-4.12.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="1" errors="0" time="0" id="37" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\log4j-api-2.10.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: log4j-api-2.10.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2020-9488" name="pkg:maven/org.apache.logging.log4j/log4j-api@2.10.0"><failure message="cvssV3: LOW, score: 3.7 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender. Fixed in Apache Log4j 2.12.3 and 2.13.1</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\log4j-api-2.10.0.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="38" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\log4j-to-slf4j-2.10.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: log4j-to-slf4j-2.10.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: log4j-to-slf4j-2.10.0.jar"/></testsuite><testsuite failures="2" errors="0" time="0" id="39" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\logback-core-1.2.3.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: logback-core-1.2.3.jar" skipped="0" tests="2" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-6378" name="pkg:maven/ch.qos.logback/logback-core@1.2.3"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A serialization vulnerability in logback receiver component part of 
logback version 1.4.11 allows an attacker to mount a Denial-Of-Service 
attack by sending poisoned data.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\logback-core-1.2.3.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-42550" name="pkg:maven/ch.qos.logback/logback-core@1.2.3"><failure message="cvssV3: MEDIUM, score: 6.6 (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H/E:0.7/RC:R/MAV:A)"/><system-out>In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\logback-core-1.2.3.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="40" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-aether-provider-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-aether-provider-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-aether-provider-3.1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="41" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-artifact-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-artifact-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-artifact-3.1.0.jar"/></testsuite><testsuite failures="1" errors="0" time="0" id="42" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-core-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-core-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2021-26291" name="pkg:maven/org.apache.maven/maven-core@3.1.0"><failure message="cvssV3: CRITICAL, score: 9.100000381469727 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Apache Maven will follow repositories that are defined in a dependency� Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-core-3.1.0.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="43" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-filtering-3.2.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-filtering-3.2.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-filtering-3.2.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="44" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-model-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-model-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-model-3.1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="45" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-model-builder-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-model-builder-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-model-builder-3.1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="46" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-plugin-api-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-plugin-api-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-plugin-api-3.1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="47" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-repository-metadata-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-repository-metadata-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-repository-metadata-3.1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="48" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-resources-plugin-3.2.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-resources-plugin-3.2.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-resources-plugin-3.2.0.jar"/></testsuite><testsuite failures="1" errors="0" time="0" id="49" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-settings-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-settings-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2021-26291" name="pkg:maven/org.apache.maven/maven-settings@3.1.0"><failure message="cvssV3: CRITICAL, score: 9.100000381469727 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Apache Maven will follow repositories that are defined in a dependency� Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-settings-3.1.0.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="50" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-settings-builder-3.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-settings-builder-3.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-settings-builder-3.1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="51" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\maven-shared-utils-3.3.3.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-shared-utils-3.3.3.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: maven-shared-utils-3.3.3.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="52" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\micrometer-core-1.0.5.jar\META-INF/maven/org.pcollections/pcollections/pom.xml" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: micrometer-core-1.0.5.jar (shaded: org.pcollections:pcollections:3.0.1)" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: micrometer-core-1.0.5.jar (shaded: org.pcollections:pcollections:3.0.1)"/></testsuite><testsuite failures="0" errors="0" time="0" id="53" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\micrometer-core-1.0.5.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: micrometer-core-1.0.5.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: micrometer-core-1.0.5.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="54" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\mockito-core-2.15.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: mockito-core-2.15.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: mockito-core-2.15.0.jar"/></testsuite><testsuite failures="15" errors="0" time="0" id="55" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: netty-codec-4.1.25.Final.jar" skipped="0" tests="15" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2019-20444" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: CRITICAL, score: 9.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an &quot;invalid fold.&quot;</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-20445" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: CRITICAL, score: 9.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-16869" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a &quot;Transfer-Encoding : chunked&quot; line), which leads to HTTP request smuggling.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11612" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-37136" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The Bzip2 decompression decoder function doesn&apos;t allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-37137" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The Snappy frame decoder function doesn&apos;t restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-41881" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Netty project is an event-driven asynchronous network application framework. In versions prior to 4.1.86.Final, a StackOverflowError can be raised when parsing a malformed crafted message due to an infinite recursion. This issue is patched in version 4.1.86.Final. There is no workaround, except using a custom HaProxyMessageDecoder.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-44487" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-43797" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N/E:2.8/RC:R/MAV:A)"/><system-out>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to &quot;sanitize&quot; header names before it forward these to another remote system when used as proxy. This remote system can&apos;t see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-41915" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N)"/><system-out>Netty project is an event-driven asynchronous network application framework. Starting in version 4.1.83.Final and prior to 4.1.86.Final, when calling `DefaultHttpHeadesr.set` with an _iterator_ of values, header value validation was not performed, allowing malicious header values in the iterator to perform HTTP Response Splitting. This issue has been patched in version 4.1.86.Final. Integrators can work around the issue by changing the `DefaultHttpHeaders.set(CharSequence, Iterator&lt;?&gt;)` call, into a `remove()` call, and call `add()` in a loop over the iterator of values.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2022-41915 for details</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-34462" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. The `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap. The `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. Normally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`. This vulnerability has been fixed in version 4.1.94.Final.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N/E:2.2/RC:R/MAV:A)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-21409" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N/E:2.2/RC:R/MAV:A)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N/E:1.8/RC:R/MAV:A)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-24823" name="pkg:maven/io.netty/netty-codec@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N/E:1.8/RC:R/MAV:A)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one&apos;s own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-codec-4.1.25.Final.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="56" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-common-4.1.25.Final.jar\META-INF/maven/org.jctools/jctools-core/pom.xml" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: netty-common-4.1.25.Final.jar (shaded: org.jctools:jctools-core:2.1.1)" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: netty-common-4.1.25.Final.jar (shaded: org.jctools:jctools-core:2.1.1)"/></testsuite><testsuite failures="14" errors="0" time="0" id="57" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: netty-transport-4.1.25.Final.jar" skipped="0" tests="14" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2019-20444" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: CRITICAL, score: 9.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an &quot;invalid fold.&quot;</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-20445" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: CRITICAL, score: 9.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-16869" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a &quot;Transfer-Encoding : chunked&quot; line), which leads to HTTP request smuggling.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11612" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-37136" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The Bzip2 decompression decoder function doesn&apos;t allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-37137" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The Snappy frame decoder function doesn&apos;t restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-41881" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Netty project is an event-driven asynchronous network application framework. In versions prior to 4.1.86.Final, a StackOverflowError can be raised when parsing a malformed crafted message due to an infinite recursion. This issue is patched in version 4.1.86.Final. There is no workaround, except using a custom HaProxyMessageDecoder.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-44487" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-43797" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N/E:2.8/RC:R/MAV:A)"/><system-out>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to &quot;sanitize&quot; header names before it forward these to another remote system when used as proxy. This remote system can&apos;t see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-34462" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. The `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap. The `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. Normally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`. This vulnerability has been fixed in version 4.1.94.Final.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N/E:2.2/RC:R/MAV:A)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-21409" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N/E:2.2/RC:R/MAV:A)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N/E:1.8/RC:R/MAV:A)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-24823" name="pkg:maven/io.netty/netty-transport@4.1.25.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N/E:1.8/RC:R/MAV:A)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one&apos;s own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\netty-transport-4.1.25.Final.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="58" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\nio-multipart-parser-1.1.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: nio-multipart-parser-1.1.0.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: nio-multipart-parser-1.1.0.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="59" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\nio-stream-storage-1.1.3.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: nio-stream-storage-1.1.3.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: nio-stream-storage-1.1.3.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="60" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\objenesis-2.6.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: objenesis-2.6.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: objenesis-2.6.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="61" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\org.eclipse.sisu.inject-0.0.0.M2a.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: org.eclipse.sisu.inject-0.0.0.M2a.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: org.eclipse.sisu.inject-0.0.0.M2a.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="62" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\org.eclipse.sisu.plexus-0.0.0.M2a.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: org.eclipse.sisu.plexus-0.0.0.M2a.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: org.eclipse.sisu.plexus-0.0.0.M2a.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="63" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-build-api-0.0.7.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-build-api-0.0.7.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-build-api-0.0.7.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="64" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-cipher-1.4.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-cipher-1.4.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-cipher-1.4.jar"/></testsuite><testsuite failures="2" errors="0" time="0" id="65" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-classworlds-2.4.2.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-classworlds-2.4.2.jar" skipped="0" tests="2" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-4244" name="pkg:maven/org.codehaus.plexus/plexus-classworlds@2.4.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>A flaw was found in codeplex-codehaus. A directory traversal attack (also known as path traversal) aims to access files and directories stored outside the intended folder. By manipulating files with &quot;dot-dot-slash (../)&quot; sequences and their variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on the file system, including application source code, configuration, and other critical system files.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-classworlds-2.4.2.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-4245" name="pkg:maven/org.codehaus.plexus/plexus-classworlds@2.4.2"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N/E:2.8/RC:R/MAV:A)"/><system-out>A flaw was found in codehaus-plexus. The org.codehaus.plexus.util.xml.XmlWriterUtil#writeComment fails to sanitize comments for a --&gt; sequence. This issue means that text contained in the command string could be interpreted as XML and allow for XML injection.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-classworlds-2.4.2.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="2" errors="0" time="0" id="66" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-component-annotations-2.0.0.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-component-annotations-2.0.0.jar" skipped="0" tests="2" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-4244" name="pkg:maven/org.codehaus.plexus/plexus-component-annotations@2.0.0"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>A flaw was found in codeplex-codehaus. A directory traversal attack (also known as path traversal) aims to access files and directories stored outside the intended folder. By manipulating files with &quot;dot-dot-slash (../)&quot; sequences and their variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on the file system, including application source code, configuration, and other critical system files.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-component-annotations-2.0.0.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-4245" name="pkg:maven/org.codehaus.plexus/plexus-component-annotations@2.0.0"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N/E:2.8/RC:R/MAV:A)"/><system-out>A flaw was found in codehaus-plexus. The org.codehaus.plexus.util.xml.XmlWriterUtil#writeComment fails to sanitize comments for a --&gt; sequence. This issue means that text contained in the command string could be interpreted as XML and allow for XML injection.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-component-annotations-2.0.0.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="2" errors="0" time="0" id="67" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-interpolation-1.26.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-interpolation-1.26.jar" skipped="0" tests="2" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-4244" name="pkg:maven/org.codehaus.plexus/plexus-interpolation@1.26"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>A flaw was found in codeplex-codehaus. A directory traversal attack (also known as path traversal) aims to access files and directories stored outside the intended folder. By manipulating files with &quot;dot-dot-slash (../)&quot; sequences and their variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on the file system, including application source code, configuration, and other critical system files.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-interpolation-1.26.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-4245" name="pkg:maven/org.codehaus.plexus/plexus-interpolation@1.26"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N/E:2.8/RC:R/MAV:A)"/><system-out>A flaw was found in codehaus-plexus. The org.codehaus.plexus.util.xml.XmlWriterUtil#writeComment fails to sanitize comments for a --&gt; sequence. This issue means that text contained in the command string could be interpreted as XML and allow for XML injection.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-interpolation-1.26.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="68" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-sec-dispatcher-1.3.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-sec-dispatcher-1.3.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-sec-dispatcher-1.3.jar"/></testsuite><testsuite failures="3" errors="0" time="0" id="69" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-utils-3.0.10.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: plexus-utils-3.0.10.jar" skipped="0" tests="3" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2017-1000487" name="pkg:maven/org.codehaus.plexus/plexus-utils@3.0.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Plexus-utils before 3.0.16 is vulnerable to command injection because it does not correctly process the contents of double quoted strings.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-utils-3.0.10.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-4244" name="pkg:maven/org.codehaus.plexus/plexus-utils@3.0.10"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>A flaw was found in codeplex-codehaus. A directory traversal attack (also known as path traversal) aims to access files and directories stored outside the intended folder. By manipulating files with &quot;dot-dot-slash (../)&quot; sequences and their variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on the file system, including application source code, configuration, and other critical system files.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-utils-3.0.10.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-4245" name="pkg:maven/org.codehaus.plexus/plexus-utils@3.0.10"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N/E:2.8/RC:R/MAV:A)"/><system-out>A flaw was found in codehaus-plexus. The org.codehaus.plexus.util.xml.XmlWriterUtil#writeComment fails to sanitize comments for a --&gt; sequence. This issue means that text contained in the command string could be interpreted as XML and allow for XML injection.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\plexus-utils-3.0.10.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="70" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\reactive-streams-1.0.2.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: reactive-streams-1.0.2.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: reactive-streams-1.0.2.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="71" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\reactor-core-3.1.8.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: reactor-core-3.1.8.RELEASE.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: reactor-core-3.1.8.RELEASE.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="72" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\reactor-extra-3.1.6.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: reactor-extra-3.1.6.RELEASE.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: reactor-extra-3.1.6.RELEASE.jar"/></testsuite><testsuite failures="3" errors="0" time="0" id="73" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\reactor-netty-0.7.8.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: reactor-netty-0.7.8.RELEASE.jar" skipped="0" tests="3" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2020-5403" name="pkg:maven/io.projectreactor.ipc/reactor-netty@0.7.8.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Reactor Netty HttpServer, versions 0.9.3 and 0.9.4, is exposed to a URISyntaxException that causes the connection to be closed prematurely instead of producing a 400 response.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2020-5403 for details</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\reactor-netty-0.7.8.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-34054" name="pkg:maven/io.projectreactor.ipc/reactor-netty@0.7.8.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>
In Reactor Netty HTTP Server, versions 1.1.x prior to 1.1.13 and versions 1.0.x prior to 1.0.39, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.

Specifically, an application is vulnerable if Reactor Netty HTTP Server built-in integration with Micrometer is enabled.




</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\reactor-netty-0.7.8.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5404" name="pkg:maven/io.projectreactor.ipc/reactor-netty@0.7.8.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.900000095367432 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:N)"/><system-out>The HttpClient from Reactor Netty, versions 0.9.x prior to 0.9.5, and versions 0.8.x prior to 0.8.16, may be used incorrectly, leading to a credentials leak during a redirect to a different domain. In order for this to happen, the HttpClient must have been explicitly configured to follow redirects.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\reactor-netty-0.7.8.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="74" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\sisu-guice-3.1.0-no_aop.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: sisu-guice-3.1.0-no_aop.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: sisu-guice-3.1.0-no_aop.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="75" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\slf4j-api-1.7.25.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: slf4j-api-1.7.25.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: slf4j-api-1.7.25.jar"/></testsuite><testsuite failures="8" errors="0" time="0" id="76" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: snakeyaml-1.19.jar" skipped="0" tests="8" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-1471" name="pkg:maven/org.yaml/snakeyaml@1.19"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>SnakeYaml&apos;s Constructor() class does not restrict types which can be instantiated during deserialization.��Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml&apos;s SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.
</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2017-18640" name="pkg:maven/org.yaml/snakeyaml@1.19"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-25857" name="pkg:maven/org.yaml/snakeyaml@1.19"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-38749" name="pkg:maven/org.yaml/snakeyaml@1.19"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-38751" name="pkg:maven/org.yaml/snakeyaml@1.19"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-38752" name="pkg:maven/org.yaml/snakeyaml@1.19"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-41854" name="pkg:maven/org.yaml/snakeyaml@1.19"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-38750" name="pkg:maven/org.yaml/snakeyaml@1.19"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:1.8/RC:R/MAV:A)"/><system-out>Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\snakeyaml-1.19.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="3" errors="0" time="0" id="77" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-2.0.3.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-2.0.3.RELEASE.jar" skipped="0" tests="3" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-20873" name="pkg:maven/org.springframework.boot/spring-boot@2.0.3.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-27772" name="pkg:maven/org.springframework.boot/spring-boot@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.8/RC:R/MAV:A)"/><system-out>spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20883" name="pkg:maven/org.springframework.boot/spring-boot@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="4" errors="0" time="0" id="78" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-actuator-2.0.3.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-actuator-2.0.3.RELEASE.jar" skipped="0" tests="4" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-20873" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.0.3.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-actuator-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-27772" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.8/RC:R/MAV:A)"/><system-out>spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-actuator-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20883" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-actuator-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-34055" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.0.3.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Boot versions 2.7.0 - 2.7.17, 3.0.0-3.0.12 and 3.1.0-3.1.5, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.

Specifically, an application is vulnerable when all of the following are true:

  *  the application uses Spring MVC or Spring WebFlux
  *  org.springframework.boot:spring-boot-actuator�s on the classpath



</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-actuator-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="2" errors="0" time="0" id="79" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-2.0.1.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-admin-server-2.0.1.jar" skipped="0" tests="2" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-46166" name="pkg:maven/de.codecentric/spring-boot-admin-server@2.0.1"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Spring boot admins is an open source administrative user interface for management of spring boot applications. All users who run Spring Boot Admin Server, having enabled Notifiers (e.g. Teams-Notifier) and write access to environment variables via UI are affected. Users are advised to upgrade to the most recent releases of Spring Boot Admin 2.6.10 and 2.7.8 to resolve this issue. Users unable to upgrade may disable any notifier or disable write access (POST request) on `/env` actuator endpoint.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-2.0.1.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-38286" name="pkg:maven/de.codecentric/spring-boot-admin-server@2.0.1"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>Thymeleaf through 3.1.1.RELEASE, as used in spring-boot-admin (aka Spring Boot Admin) through 3.1.1 and other products, allows sandbox bypass via crafted HTML. This may be relevant for SSTI (Server Side Template Injection) and code execution in spring-boot-admin if MailNotifier is enabled and there is write access to environment variables via the UI.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-2.0.1.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="80" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-ui-2.0.1.jar\META-INF\spring-boot-admin-server-ui\assets\js\event-source-polyfill.js" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-admin-server-ui-2.0.1.jar: event-source-polyfill.js" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-admin-server-ui-2.0.1.jar: event-source-polyfill.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="81" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-ui-2.0.1.jar\META-INF\spring-boot-admin-server-ui\assets\js\sba-core.js" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-admin-server-ui-2.0.1.jar: sba-core.js" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-admin-server-ui-2.0.1.jar: sba-core.js"/></testsuite><testsuite failures="5" errors="0" time="0" id="82" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-ui-2.0.1.jar\META-INF\spring-boot-admin-server-ui\assets\js\vendors.js" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-admin-server-ui-2.0.1.jar: vendors.js" skipped="0" tests="5" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-24785" name="pkg:javascript/moment.js@2.22.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-ui-2.0.1.jar\META-INF\spring-boot-admin-server-ui\assets\js\vendors.js, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-31129" name="pkg:javascript/moment.js@2.22.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-ui-2.0.1.jar\META-INF\spring-boot-admin-server-ui\assets\js\vendors.js, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-22467" name="pkg:javascript/moment.js@2.22.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Luxon is a library for working with dates and times in JavaScript. On the 1.x branch prior to 1.38.1, the 2.x branch prior to 2.5.2, and the 3.x branch on 3.2.1, Luxon&apos;s `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks. This issue also appears in Moment as CVE-2022-31129. Versions 1.38.1, 2.5.2, and 3.2.1 contain patches for this issue. As a workaround, limit the length of the input.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-ui-2.0.1.jar\META-INF\spring-boot-admin-server-ui\assets\js\vendors.js, project-references: [  ]</system-err></testcase><testcase classname="Bump vue-server-renderer&apos;s dependency of serialize-javascript to 2.1.2" name="pkg:javascript/moment.js@2.22.2"><failure message="unscored severity: medium"/><system-out>Bump vue-server-renderer&apos;s dependency of serialize-javascript to 2.1.2</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-ui-2.0.1.jar\META-INF\spring-boot-admin-server-ui\assets\js\vendors.js, project-references: [  ]</system-err></testcase><testcase classname="potential xss in ssr when using v-bind" name="pkg:javascript/moment.js@2.22.2"><failure message="unscored severity: medium"/><system-out>potential xss in ssr when using v-bind</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-admin-server-ui-2.0.1.jar\META-INF\spring-boot-admin-server-ui\assets\js\vendors.js, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="3" errors="0" time="0" id="83" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-reactor-netty-2.0.3.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-starter-reactor-netty-2.0.3.RELEASE.jar" skipped="0" tests="3" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-20873" name="pkg:maven/org.springframework.boot/spring-boot-starter-reactor-netty@2.0.3.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-reactor-netty-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-27772" name="pkg:maven/org.springframework.boot/spring-boot-starter-reactor-netty@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.8/RC:R/MAV:A)"/><system-out>spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-reactor-netty-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20883" name="pkg:maven/org.springframework.boot/spring-boot-starter-reactor-netty@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-reactor-netty-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="4" errors="0" time="0" id="84" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar" skipped="0" tests="4" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-20873" name="pkg:maven/org.springframework.boot/spring-boot-starter-thymeleaf@2.0.3.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-27772" name="pkg:maven/org.springframework.boot/spring-boot-starter-thymeleaf@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.8/RC:R/MAV:A)"/><system-out>spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20883" name="pkg:maven/org.springframework.boot/spring-boot-starter-thymeleaf@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-38286" name="pkg:maven/org.springframework.boot/spring-boot-starter-thymeleaf@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>Thymeleaf through 3.1.1.RELEASE, as used in spring-boot-admin (aka Spring Boot Admin) through 3.1.1 and other products, allows sandbox bypass via crafted HTML. This may be relevant for SSTI (Server Side Template Injection) and code execution in spring-boot-admin if MailNotifier is enabled and there is write access to environment variables via the UI.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="3" errors="0" time="0" id="85" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-web-2.0.3.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-boot-starter-web-2.0.3.RELEASE.jar" skipped="0" tests="3" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-20873" name="pkg:maven/org.springframework.boot/spring-boot-starter-web@2.0.3.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-web-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-27772" name="pkg:maven/org.springframework.boot/spring-boot-starter-web@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.8/RC:R/MAV:A)"/><system-out>spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-web-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20883" name="pkg:maven/org.springframework.boot/spring-boot-starter-web@2.0.3.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-boot-starter-web-2.0.3.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="8" errors="0" time="0" id="86" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-core-5.0.7.RELEASE.jar" skipped="0" tests="8" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework/spring-core@5.0.7.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-15756" name="pkg:maven/org.springframework/spring-core@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5398" name="pkg:maven/org.springframework/spring-core@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a &quot;Content-Disposition&quot; header in the response where the filename attribute is derived from user supplied input.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5421" name="pkg:maven/org.springframework/spring-core@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N/E:1.3/RC:R/MAV:A)"/><system-out>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework/spring-core@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework/spring-core@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework/spring-core@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework/spring-core@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H/E:1.6/RC:R/MAV:A)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-core-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="9" errors="0" time="0" id="87" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-expression-5.0.7.RELEASE.jar" skipped="0" tests="9" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-15756" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5398" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a &quot;Content-Disposition&quot; header in the response where the filename attribute is derived from user supplied input.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5421" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N/E:1.3/RC:R/MAV:A)"/><system-out>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20863" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework/spring-expression@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H/E:1.6/RC:R/MAV:A)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-expression-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="11" errors="0" time="0" id="88" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-web-5.0.7.RELEASE.jar" skipped="0" tests="11" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-22118" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.800000190734863 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2021-22118 for details</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-15756" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5398" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a &quot;Content-Disposition&quot; header in the response where the filename attribute is derived from user supplied input.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5421" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N/E:1.3/RC:R/MAV:A)"/><system-out>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H/E:1.6/RC:R/MAV:A)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-22096" name="pkg:maven/org.springframework/spring-web@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-web-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="10" errors="0" time="0" id="89" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: spring-webmvc-5.0.7.RELEASE.jar" skipped="0" tests="10" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-15756" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5398" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a &quot;Content-Disposition&quot; header in the response where the filename attribute is derived from user supplied input.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5421" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N/E:1.3/RC:R/MAV:A)"/><system-out>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-5397" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2020-5397 for details</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H/E:1.6/RC:R/MAV:A)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-22060" name="pkg:maven/org.springframework/spring-webmvc@5.0.7.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\spring-webmvc-5.0.7.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="1" errors="0" time="0" id="90" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\thymeleaf-3.0.9.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: thymeleaf-3.0.9.RELEASE.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2023-38286" name="pkg:maven/org.thymeleaf/thymeleaf@3.0.9.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>Thymeleaf through 3.1.1.RELEASE, as used in spring-boot-admin (aka Spring Boot Admin) through 3.1.1 and other products, allows sandbox bypass via crafted HTML. This may be relevant for SSTI (Server Side Template Injection) and code execution in spring-boot-admin if MailNotifier is enabled and there is write access to environment variables via the UI.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\thymeleaf-3.0.9.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="91" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\thymeleaf-extras-java8time-3.0.1.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: thymeleaf-extras-java8time-3.0.1.RELEASE.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: thymeleaf-extras-java8time-3.0.1.RELEASE.jar"/></testsuite><testsuite failures="2" errors="0" time="0" id="92" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\thymeleaf-spring5-3.0.9.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: thymeleaf-spring5-3.0.9.RELEASE.jar" skipped="0" tests="2" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2021-43466" name="pkg:maven/org.thymeleaf/thymeleaf-spring5@3.0.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.800000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In the thymeleaf-spring5:3.0.12 component, thymeleaf combined with specific scenarios in template injection may lead to remote code execution.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\thymeleaf-spring5-3.0.9.RELEASE.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-38286" name="pkg:maven/org.thymeleaf/thymeleaf-spring5@3.0.9.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>Thymeleaf through 3.1.1.RELEASE, as used in spring-boot-admin (aka Spring Boot Admin) through 3.1.1 and other products, allows sandbox bypass via crafted HTML. This may be relevant for SSTI (Server Side Template Injection) and code execution in spring-boot-admin if MailNotifier is enabled and there is write access to environment variables via the UI.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\thymeleaf-spring5-3.0.9.RELEASE.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="34" errors="0" time="0" id="93" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: tomcat-embed-core-8.5.31.jar" skipped="0" tests="34" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2018-8014" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The defaults settings for the CORS filter provided in Apache Tomcat 9.0.0.M1 to 9.0.8, 8.5.0 to 8.5.31, 8.0.0.RC1 to 8.0.52, 7.0.41 to 7.0.88 are insecure and enable &apos;supportsCredentials&apos; for all origins. It is expected that users of the CORS filter will have configured it appropriately for their environment rather than using it in the default configuration. Therefore, it is expected that most users will not be impacted by this issue.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-1938" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-25762" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 8.6 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:3.9/RC:R/MAV:A)"/><system-out>If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-0232" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange&apos;s blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-8034" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>The host name verification when using TLS with the WebSocket client was missing. It is now enabled by default. Versions Affected: Apache Tomcat 9.0.0.M1 to 9.0.9, 8.5.0 to 8.5.31, 8.0.0.RC1 to 8.0.52, and 7.0.35 to 7.0.88.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-0199" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The HTTP/2 implementation in Apache Tomcat 9.0.0.M1 to 9.0.14 and 8.5.0 to 8.5.37 accepted streams with excessive numbers of SETTINGS frames and also permitted clients to keep streams open without reading/writing request/response data. By keeping streams open for requests that utilised the Servlet API&apos;s blocking I/O, clients were able to cause server-side threads to block eventually leading to thread exhaustion and a DoS.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-10072" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The fix for CVE-2019-0199 was incomplete and did not address HTTP/2 connection window exhaustion on write in Apache Tomcat versions 9.0.0.M1 to 9.0.19 and 8.5.0 to 8.5.40 . By not sending WINDOW_UPDATE messages for the connection window (stream 0) clients were able to cause server-side threads to block eventually leading to thread exhaustion and a DoS.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-17563" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11996" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A specially crafted sequence of HTTP/2 requests sent to Apache Tomcat 10.0.0-M1 to 10.0.0-M5, 9.0.0.M1 to 9.0.35 and 8.5.0 to 8.5.55 could trigger high CPU usage for several seconds. If a sufficient number of such requests were made on concurrent HTTP/2 connections, the server could become unresponsive.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-13934" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>An h2c direct connection to Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M5 to 9.0.36 and 8.5.1 to 8.5.56 did not release the HTTP/1.1 processor after the upgrade to HTTP/2. If a sufficient number of such requests were made, an OutOfMemoryException could occur leading to a denial of service.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-13935" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The payload length in a WebSocket frame was not correctly validated in Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M1 to 9.0.36, 8.5.0 to 8.5.56 and 7.0.27 to 7.0.104. Invalid payload lengths could trigger an infinite loop. Multiple requests with invalid payload lengths could lead to a denial of service.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-17527" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>While investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-25122" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>When responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A&apos;s request.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-41079" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Apache Tomcat 8.5.0 to 8.5.63, 9.0.0-M1 to 9.0.43 and 10.0.0-M1 to 10.0.2 did not properly validate incoming TLS packets. When Tomcat was configured to use NIO+OpenSSL or NIO2+OpenSSL for TLS, a specially crafted packet could be used to trigger an infinite loop resulting in a denial of service.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-42252" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>If Apache Tomcat 8.5.0 to 8.5.82, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-44487" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-46589" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Improper Input Validation vulnerability in Apache Tomcat.Tomcat from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through 10.1.15, from 9.0.0-M1 through 9.0.82 and from 8.5.0 through 8.5.95 did not correctly parse HTTP trailer headers. A trailer header that exceeded the header size limit could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request 
smuggling when behind a reverse proxy.

Users are recommended to upgrade to version 11.0.0-M11��onwards, 10.1.16 onwards, 9.0.83 onwards or 8.5.96 onwards, which fix the issue.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-12418" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.0/RC:R/MAV:A)"/><system-out>When Apache Tomcat 9.0.0.M1 to 9.0.28, 8.5.0 to 8.5.47, 7.0.0 and 7.0.97 is configured with the JMX Remote Lifecycle Listener, a local attacker without access to the Tomcat process or configuration files is able to manipulate the RMI registry to perform a man-in-the-middle attack to capture user names and passwords used to access the JMX interface. The attacker can then use these credentials to access the JMX interface and gain complete control over the Tomcat instance.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-9484" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.0/RC:R/MAV:A)"/><system-out>When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=&quot;null&quot; (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-25329" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.0/RC:R/MAV:A)"/><system-out>The fix for CVE-2020-9484 was incomplete. When using Apache Tomcat 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41, 8.5.0 to 8.5.61 or 7.0.0. to 7.0.107 with a configuration edge case that was highly unlikely to be used, the Tomcat instance was still vulnerable to CVE-2020-9494. Note that both the previously published prerequisites for CVE-2020-9484 and the previously published mitigations for CVE-2020-9484 also apply to this issue.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-30640" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N/E:2.2/RC:R/MAV:A)"/><system-out>A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-0221" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:2.8/RC:R/MAV:A)"/><system-out>The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-41080" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:2.8/RC:R/MAV:A)"/><system-out>URL Redirection to Untrusted Site (&apos;Open Redirect&apos;) vulnerability in FORM authentication feature Apache Tomcat.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through 10.0.12, from 9.0.0-M1 through 9.0.79 and from 8.5.0 through 8.5.92.

The vulnerability is limited to the ROOT (default) web application.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-8037" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>If an async request was completed by the application at the same time as the container triggered the async timeout, a race condition existed that could result in a user seeing a response intended for a different user. An additional issue was present in the NIO and NIO2 connectors that did not correctly track the closure of the connection when an async request was completed by the application and timed out by the container at the same time. This could also result in a user seeing a response intended for another user. Versions Affected: Apache Tomcat 9.0.0.M9 to 9.0.9 and 8.5.5 to 8.5.31.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-2684" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N/E:2.2/RC:R/MAV:A)"/><system-out>Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 7u211, 8u202, 11.0.2 and 12; Java SE Embedded: 8u201. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-24122" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-33037" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-42795" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Incomplete Cleanup vulnerability in Apache Tomcat.When recycling various internal objects in Apache Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from 8.5.0 through 8.5.93, an error could 
cause Tomcat to skip some parts of the recycling process leading to 
information leaking from the current request/response to the next.

Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-45648" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Improper Input Validation vulnerability in Apache Tomcat.Tomcat��from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly parse HTTP trailer headers. A specially 
crafted, invalid trailer header could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request 
smuggling when behind a reverse proxy.

Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fix the issue.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-1935" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 4.8 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:2.2/RC:R/MAV:A)"/><system-out>In Apache Tomcat 9.0.0.M1 to 9.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99 the HTTP header parsing code used an approach to end-of-line parsing that allowed some invalid HTTP headers to be parsed as valid. This led to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-11784" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:2.8/RC:R/MAV:A)"/><system-out>When the default servlet in Apache Tomcat versions 9.0.0.M1 to 9.0.11, 8.5.0 to 8.5.33 and 7.0.23 to 7.0.90 returned a redirect to a directory (e.g. redirecting to &apos;/foo/&apos; when the user requested &apos;/foo&apos;) a specially crafted URL could be used to cause the redirect to be generated to any URI of the attackers choice.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-13943" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N/E:2.8/RC:R/MAV:A)"/><system-out>If an HTTP/2 client connecting to Apache Tomcat 10.0.0-M1 to 10.0.0-M7, 9.0.0.M1 to 9.0.37 or 8.5.0 to 8.5.57 exceeded the agreed maximum number of concurrent streams for a connection (in violation of the HTTP/2 protocol), it was possible that a subsequent request made on that connection could contain HTTP headers - including HTTP/2 pseudo headers - from a previous request rather than the intended headers. This could lead to users seeing responses for unexpected resources.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-28708" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N/E:2.8/RC:R/MAV:A)"/><system-out>
When using the RemoteIpFilter with requests received from a    reverse proxy via HTTP that include the X-Forwarded-Proto    header set to https, session cookies created by Apache Tomcat 11.0.0-M1 to 11.0.0.-M2, 10.1.0-M1 to 10.1.5, 9.0.0-M1 to 9.0.71 and 8.5.0 to 8.5.85 did not��include the secure attribute. This could result in the user agent��transmitting the session cookie over an insecure channel.







</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-43980" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.31"><failure message="cvssV3: LOW, score: 3.7 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-core-8.5.31.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="94" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-el-8.5.31.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: tomcat-embed-el-8.5.31.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: tomcat-embed-el-8.5.31.jar"/></testsuite><testsuite failures="35" errors="0" time="0" id="95" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: tomcat-embed-websocket-8.5.31.jar" skipped="0" tests="35" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="CVE-2018-8014" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The defaults settings for the CORS filter provided in Apache Tomcat 9.0.0.M1 to 9.0.8, 8.5.0 to 8.5.31, 8.0.0.RC1 to 8.0.52, 7.0.41 to 7.0.88 are insecure and enable &apos;supportsCredentials&apos; for all origins. It is expected that users of the CORS filter will have configured it appropriately for their environment rather than using it in the default configuration. Therefore, it is expected that most users will not be impacted by this issue.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-1938" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A)"/><system-out>When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-25762" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 8.6 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:3.9/RC:R/MAV:A)"/><system-out>If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-0232" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:2.2/RC:R/MAV:A)"/><system-out>When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange&apos;s blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-8022" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.8/RC:R/MAV:A)"/><system-out>A Incorrect Default Permissions vulnerability in the packaging of tomcat on SUSE Enterprise Storage 5, SUSE Linux Enterprise Server 12-SP2-BCL, SUSE Linux Enterprise Server 12-SP2-LTSS, SUSE Linux Enterprise Server 12-SP3-BCL, SUSE Linux Enterprise Server 12-SP3-LTSS, SUSE Linux Enterprise Server 12-SP4, SUSE Linux Enterprise Server 12-SP5, SUSE Linux Enterprise Server 15-LTSS, SUSE Linux Enterprise Server for SAP 12-SP2, SUSE Linux Enterprise Server for SAP 12-SP3, SUSE Linux Enterprise Server for SAP 15, SUSE OpenStack Cloud 7, SUSE OpenStack Cloud 8, SUSE OpenStack Cloud Crowbar 8 allows local attackers to escalate from group tomcat to root. This issue affects: SUSE Enterprise Storage 5 tomcat versions prior to 8.0.53-29.32.1. SUSE Linux Enterprise Server 12-SP2-BCL tomcat versions prior to 8.0.53-29.32.1. SUSE Linux Enterprise Server 12-SP2-LTSS tomcat versions prior to 8.0.53-29.32.1. SUSE Linux Enterprise Server 12-SP3-BCL tomcat versions prior to 8.0.53-29.32.1. SUSE Linux Enterprise Server 12-SP3-LTSS tomcat versions prior to 8.0.53-29.32.1. SUSE Linux Enterprise Server 12-SP4 tomcat versions prior to 9.0.35-3.39.1. SUSE Linux Enterprise Server 12-SP5 tomcat versions prior to 9.0.35-3.39.1. SUSE Linux Enterprise Server 15-LTSS tomcat versions prior to 9.0.35-3.57.3. SUSE Linux Enterprise Server for SAP 12-SP2 tomcat versions prior to 8.0.53-29.32.1. SUSE Linux Enterprise Server for SAP 12-SP3 tomcat versions prior to 8.0.53-29.32.1. SUSE Linux Enterprise Server for SAP 15 tomcat versions prior to 9.0.35-3.57.3. SUSE OpenStack Cloud 7 tomcat versions prior to 8.0.53-29.32.1. SUSE OpenStack Cloud 8 tomcat versions prior to 8.0.53-29.32.1. SUSE OpenStack Cloud Crowbar 8 tomcat versions prior to 8.0.53-29.32.1.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-8034" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>The host name verification when using TLS with the WebSocket client was missing. It is now enabled by default. Versions Affected: Apache Tomcat 9.0.0.M1 to 9.0.9, 8.5.0 to 8.5.31, 8.0.0.RC1 to 8.0.52, and 7.0.35 to 7.0.88.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-0199" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The HTTP/2 implementation in Apache Tomcat 9.0.0.M1 to 9.0.14 and 8.5.0 to 8.5.37 accepted streams with excessive numbers of SETTINGS frames and also permitted clients to keep streams open without reading/writing request/response data. By keeping streams open for requests that utilised the Servlet API&apos;s blocking I/O, clients were able to cause server-side threads to block eventually leading to thread exhaustion and a DoS.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-10072" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The fix for CVE-2019-0199 was incomplete and did not address HTTP/2 connection window exhaustion on write in Apache Tomcat versions 9.0.0.M1 to 9.0.19 and 8.5.0 to 8.5.40 . By not sending WINDOW_UPDATE messages for the connection window (stream 0) clients were able to cause server-side threads to block eventually leading to thread exhaustion and a DoS.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-17563" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H/E:1.6/RC:R/MAV:A)"/><system-out>When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-11996" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>A specially crafted sequence of HTTP/2 requests sent to Apache Tomcat 10.0.0-M1 to 10.0.0-M5, 9.0.0.M1 to 9.0.35 and 8.5.0 to 8.5.55 could trigger high CPU usage for several seconds. If a sufficient number of such requests were made on concurrent HTTP/2 connections, the server could become unresponsive.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-13934" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>An h2c direct connection to Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M5 to 9.0.36 and 8.5.1 to 8.5.56 did not release the HTTP/1.1 processor after the upgrade to HTTP/2. If a sufficient number of such requests were made, an OutOfMemoryException could occur leading to a denial of service.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-13935" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The payload length in a WebSocket frame was not correctly validated in Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M1 to 9.0.36, 8.5.0 to 8.5.56 and 7.0.27 to 7.0.104. Invalid payload lengths could trigger an infinite loop. Multiple requests with invalid payload lengths could lead to a denial of service.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-17527" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>While investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-25122" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>When responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A&apos;s request.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-41079" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>Apache Tomcat 8.5.0 to 8.5.63, 9.0.0-M1 to 9.0.43 and 10.0.0-M1 to 10.0.2 did not properly validate incoming TLS packets. When Tomcat was configured to use NIO+OpenSSL or NIO2+OpenSSL for TLS, a specially crafted packet could be used to trigger an infinite loop resulting in a denial of service.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2022-42252" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>If Apache Tomcat 8.5.0 to 8.5.82, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-44487" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A)"/><system-out>The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-46589" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Improper Input Validation vulnerability in Apache Tomcat.Tomcat from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through 10.1.15, from 9.0.0-M1 through 9.0.82 and from 8.5.0 through 8.5.95 did not correctly parse HTTP trailer headers. A trailer header that exceeded the header size limit could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request 
smuggling when behind a reverse proxy.

Users are recommended to upgrade to version 11.0.0-M11��onwards, 10.1.16 onwards, 9.0.83 onwards or 8.5.96 onwards, which fix the issue.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-12418" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.0/RC:R/MAV:A)"/><system-out>When Apache Tomcat 9.0.0.M1 to 9.0.28, 8.5.0 to 8.5.47, 7.0.0 and 7.0.97 is configured with the JMX Remote Lifecycle Listener, a local attacker without access to the Tomcat process or configuration files is able to manipulate the RMI registry to perform a man-in-the-middle attack to capture user names and passwords used to access the JMX interface. The attacker can then use these credentials to access the JMX interface and gain complete control over the Tomcat instance.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-9484" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.0/RC:R/MAV:A)"/><system-out>When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=&quot;null&quot; (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-25329" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:1.0/RC:R/MAV:A)"/><system-out>The fix for CVE-2020-9484 was incomplete. When using Apache Tomcat 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41, 8.5.0 to 8.5.61 or 7.0.0. to 7.0.107 with a configuration edge case that was highly unlikely to be used, the Tomcat instance was still vulnerable to CVE-2020-9494. Note that both the previously published prerequisites for CVE-2020-9484 and the previously published mitigations for CVE-2020-9484 also apply to this issue.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-30640" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N/E:2.2/RC:R/MAV:A)"/><system-out>A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-0221" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:2.8/RC:R/MAV:A)"/><system-out>The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-41080" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:2.8/RC:R/MAV:A)"/><system-out>URL Redirection to Untrusted Site (&apos;Open Redirect&apos;) vulnerability in FORM authentication feature Apache Tomcat.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through 10.0.12, from 9.0.0-M1 through 9.0.79 and from 8.5.0 through 8.5.92.

The vulnerability is limited to the ROOT (default) web application.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-8037" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>If an async request was completed by the application at the same time as the container triggered the async timeout, a race condition existed that could result in a user seeing a response intended for a different user. An additional issue was present in the NIO and NIO2 connectors that did not correctly track the closure of the connection when an async request was completed by the application and timed out by the container at the same time. This could also result in a user seeing a response intended for another user. Versions Affected: Apache Tomcat 9.0.0.M9 to 9.0.9 and 8.5.5 to 8.5.31.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2019-2684" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N/E:2.2/RC:R/MAV:A)"/><system-out>Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 7u211, 8u202, 11.0.2 and 12; Java SE Embedded: 8u201. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-24122" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-33037" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-42795" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Incomplete Cleanup vulnerability in Apache Tomcat.When recycling various internal objects in Apache Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from 8.5.0 through 8.5.93, an error could 
cause Tomcat to skip some parts of the recycling process leading to 
information leaking from the current request/response to the next.

Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-45648" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:3.9/RC:R/MAV:A)"/><system-out>Improper Input Validation vulnerability in Apache Tomcat.Tomcat��from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly parse HTTP trailer headers. A specially 
crafted, invalid trailer header could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request 
smuggling when behind a reverse proxy.

Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fix the issue.

</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-1935" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 4.8 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:2.2/RC:R/MAV:A)"/><system-out>In Apache Tomcat 9.0.0.M1 to 9.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99 the HTTP header parsing code used an approach to end-of-line parsing that allowed some invalid HTTP headers to be parsed as valid. This led to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2018-11784" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:2.8/RC:R/MAV:A)"/><system-out>When the default servlet in Apache Tomcat versions 9.0.0.M1 to 9.0.11, 8.5.0 to 8.5.33 and 7.0.23 to 7.0.90 returned a redirect to a directory (e.g. redirecting to &apos;/foo/&apos; when the user requested &apos;/foo&apos;) a specially crafted URL could be used to cause the redirect to be generated to any URI of the attackers choice.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2020-13943" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N/E:2.8/RC:R/MAV:A)"/><system-out>If an HTTP/2 client connecting to Apache Tomcat 10.0.0-M1 to 10.0.0-M7, 9.0.0.M1 to 9.0.37 or 8.5.0 to 8.5.57 exceeded the agreed maximum number of concurrent streams for a connection (in violation of the HTTP/2 protocol), it was possible that a subsequent request made on that connection could contain HTTP headers - including HTTP/2 pseudo headers - from a previous request rather than the intended headers. This could lead to users seeing responses for unexpected resources.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2023-28708" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N/E:2.8/RC:R/MAV:A)"/><system-out>
When using the RemoteIpFilter with requests received from a    reverse proxy via HTTP that include the X-Forwarded-Proto    header set to https, session cookies created by Apache Tomcat 11.0.0-M1 to 11.0.0.-M2, 10.1.0-M1 to 10.1.5, 9.0.0-M1 to 9.0.71 and 8.5.0 to 8.5.85 did not��include the secure attribute. This could result in the user agent��transmitting the session cookie over an insecure channel.







</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase><testcase classname="CVE-2021-43980" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-websocket@8.5.31"><failure message="cvssV3: LOW, score: 3.7 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:2.2/RC:R/MAV:A)"/><system-out>The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.</system-out><system-err>location: D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\tomcat-embed-websocket-8.5.31.jar, project-references: [  ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="96" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\unbescape-1.1.5.RELEASE.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: unbescape-1.1.5.RELEASE.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: unbescape-1.1.5.RELEASE.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="97" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\validation-api-2.0.1.Final.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: validation-api-2.0.1.Final.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: validation-api-2.0.1.Final.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="98" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar\BOOT-INF\lib\xmlunit-core-2.5.1.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: xmlunit-core-2.5.1.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar: xmlunit-core-2.5.1.jar"/></testsuite><testsuite failures="0" errors="0" time="0" id="99" name="D:\Developers\SourceCodes\GitHub\SpringProjects\SpringCloud\run_jar\spring-boot\spring-boot-admin\spring-boot-admin_server\spring-boot-admin_server-0.0.1-SNAPSHOT.jar" package="spring-boot-admin_server-0.0.1-SNAPSHOT.jar" skipped="0" tests="1" timestamp="2024-01-25T00:05:09.5336537"><testcase classname="dependency-check" name="spring-boot-admin_server-0.0.1-SNAPSHOT.jar"/></testsuite></testsuites>