★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
【Spring Cloud Eureka】
 
1. 建置服務註冊中心(服務端)
2. 服務註冊 和 服務發現(用戶端)
3. Eureka 的 基礎架構
4. Eureka 的 服務治理機制
5. Eureka 的 設定

★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
【Spring Cloud Eureka】

使用 Netflix Eureka 來實現服務註冊與發現，
它既包含了服務端元件，也包含了用戶端元件, 並且服務端和用戶端均採用 Java 撰寫。


Eureka 註冊中心的用戶端實現架構的目前套件如下
(1) .NET 平台的 Steeltoe
(2) Node.js eureka-js-client

★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
【Eureka 服務端】: 也稱為服務註冊中心。

Eureka 以叢集模式部署。

當叢集中有分片出現故障時，那麼 Eureka 就轉入自我保護模式。它允許在分片故障間繼續提供服務的發現和註冊，
當故障分片恢復執行時期，叢集中的其它分片會把它們的狀態再次同步回來。

com.spring.cloud.eureka
spring-cloud-eureka-server


org.springframework.boot
spring-boot-starter-parent
2.0.3.RELEASE

★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
【Eureka 客戶端】:主要處理《服務註冊》和《服務發現》

用戶端服務透過註釋和參數設定的方式，嵌入在用戶端應用程式的程式中。

在應用程式執行時期，Eureka 用戶端向註冊中心註冊本身提供的服務並週期性地發送心跳來更新它的服務租約。
同時，它也能從服務端查詢目前註冊的服務資訊並把它們快取到本機並週期性地更新服務狀態。

★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★